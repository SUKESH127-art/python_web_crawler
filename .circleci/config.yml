# @format

version: 2.1

orbs:
  docker: circleci/docker@2.4.0

jobs:
  build-and-test:
    docker:
      - image: cimg/docker:20.10.24-git
    steps:
      - checkout
      - run:
          name: Login to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Build Docker image
          command: docker build -t llms-txt-generator .
      - run:
          name: Test container startup and networking
          command: |
            # 1. Create the shared network
            docker network create test-net

            # 2. Run the application container on the network
            docker run -d --name test-container --network test-net -e FIRECRAWL_API_KEY=test_key llms-txt-generator

            echo "Waiting for container to become healthy..."
            sleep 15 # Give the app time to start

            # --- THE FIX ---
            # 3. Run test commands from *another container on the same network*.
            #    We use a lightweight image that has curl installed.
            echo "Testing API endpoints from within the network..."
            docker run --network test-net --rm alpine/curl -f --retry 5 --retry-delay 3 http://test-container:8000/
            docker run --network test-net --rm alpine/curl -f --retry 5 --retry-delay 3 http://test-container:8000/docs

            # 4. Cleanup
            docker stop test-container
            docker rm test-container
            docker network rm test-net
      - run:
          name: Run Python tests
          command: docker run --rm -e FIRECRAWL_API_KEY=test_key llms-txt-generator python -c "import main; print('Application imports successfully')"
      - run:
          name: Save Docker image to workspace
          command: |
            mkdir -p workspace
            docker save -o workspace/image.tar llms-txt-generator
      - persist_to_workspace:
          root: workspace
          paths:
            - image.tar

  deploy:
    docker:
      - image: cimg/docker:20.10.24-git
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Login to Docker Hub
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run:
          name: Load and tag Docker image
          command: |
            docker load -i /tmp/workspace/image.tar
            docker tag llms-txt-generator $DOCKER_USERNAME/$IMAGE_NAME:latest
            docker tag llms-txt-generator $DOCKER_USERNAME/$IMAGE_NAME:$CIRCLE_SHA1
      - run:
          name: Push to Docker Hub
          command: |
            docker push $DOCKER_USERNAME/$IMAGE_NAME:latest
            docker push $DOCKER_USERNAME/$IMAGE_NAME:$CIRCLE_SHA1

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
